plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.lastdance'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

subprojects {
	group 'com.lastdance'
	version '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}

	dependencies {
		// Spring Boot Starter
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.mysql:mysql-connector-j'

		// Logging
		implementation 'org.springframework.boot:spring-boot-starter-logging' // Spring Boot의 기본 로깅 설정을 사용

		// Other dependencies
		implementation 'org.apache.poi:poi-ooxml:5.0.0'
		implementation 'io.swagger.core.v3:swagger-core:2.1.9'
		implementation 'io.swagger.core.v3:swagger-jaxrs2:2.1.9'
		implementation 'io.springfox:springfox-boot-starter:3.0.0'
		implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
		implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.15'
		implementation 'io.github.cdimascio:dotenv-java:2.2.0'
		implementation 'io.github.cdimascio:java-dotenv:5.2.2'
		implementation 'javax.xml.bind:jaxb-api:2.3.1'
		implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
		implementation 'com.auth0:java-jwt:4.2.1'
		implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

		// Test dependencies
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}


	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
